<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     					http://www.springframework.org/schema/tx 
     					http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     					http://www.springframework.org/schema/aop
     					http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
     					http://www.springframework.org/schema/context 
     					http://www.springframework.org/schema/context/spring-context-3.0.xsd 
     					http://www.springframework.org/schema/mvc 
     http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
     
    <context:annotation-config />
	<tx:annotation-driven />
	<aop:aspectj-autoproxy />
	
    <!-- 工具，applicationContext静态变量 -->
	<bean id="myApp" class="com.util.tool.AppUtil"></bean>
	
    <!-- Spring exception 处理 -->
	<bean id="myExceptionResolver" class="com.aop.exception.ExceptionHandler"></bean>
	
    <!-- 国际化资源文件读取 -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:/properties/messages" />
		<property name="useCodeAsDefaultMessage" value="true" />
	</bean>
	
	<!-- Hibernate validator -->
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
       <!-- 这里配置将使用上面国际化配置的messageSource -->
         <property name="validationMessageSource" ref="messageSource" />
     </bean> 

    <!-- 多语言拦截器 -->
    <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
    
	<!-- 基于session的多语言 -->
	<bean class="org.springframework.web.servlet.i18n.SessionLocaleResolver" />
	
	<!-- 多语言配置 end -->
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter" />
	<bean class="org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter" />
	
	<!-- 适配器 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />
			</list>
		</property> 
	</bean>
	
	<!--json和对象相互转化 -->
    <!-- http message converter -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
				<value>application/json</value>
				<value>text/json</value>
			</list>
		</property>
	</bean>
	     
    <bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list> 
				<value>classpath:/properties/database.properties</value>
				<value>classpath:/properties/log4j.properties</value>
				<value>classpath:/properties/system.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- 扫描注解 bean -->
	<!-- 基础模块 -->
	<context:component-scan base-package="com.aop" /> 
	<context:component-scan base-package="com.authority" />  
	<context:component-scan base-package="com.security" />
	<context:component-scan base-package="com.base" />
	<!-- 业务模块 -->
	<context:component-scan base-package="com.ps" />
	
	<!-- 声明式事务管理 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 事务通知 -->
	<tx:advice id="myAdvice" transaction-manager="txManager">
		<tx:attributes>
		    <!--所有以query开头的方法都是只读的 -->
		    <tx:method name="get*" read-only="true" />
			<!-- 事物配置 -->
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="activiti*" propagation="REQUIRED" />
			<!--其他方法使用默认事务策略 -->
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>

    <!-- Spring 事务管理 -->
	<aop:config>
		<aop:advisor pointcut="( execution(* com.ps.service.*.I*Service.*(..)))"
			advice-ref="myAdvice" />
	</aop:config>
	
	<!-- session失效拦截 -->
	 <mvc:interceptors>
			<bean class="com.security.SessionInterceptor"></bean>
	</mvc:interceptors>
</beans>